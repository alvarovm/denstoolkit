

#ifndef _SOLCUBETOOLS_CPP_
#define _SOLCUBETOOLS_CPP_

#include "solcubetools.h"

//**********************************************************************************************
void writeCubeHeader(ofstream &ofil,string &t1,string &t2,int (&bdim)[3],
                solreal (&x0)[3],solreal (&dx)[3][3],int nat,solreal* (&atchrg),solreal* (&x))
{
   ofil.width(60);
   ofil.setf(std::ios::left);
   ofil << t1 << endl;
   ofil << t2 << endl;
   ofil.setf(std::ios::right);
   ofil.width(5);
   ofil << nat;
   ofil << setprecision(6);
   ofil.setf( std::ios::fixed, std:: ios::floatfield );
   for (int i=0; i<3; i++) {
      ofil.width(12);
      ofil << x0[i];
   }
   ofil << endl;
   for (int i=0; i<3; i++) {
      ofil.width(5);
      ofil << bdim[i];
      for (int j=0; j<3; j++) {
         ofil.width(12);
         ofil << dx[i][j];
      }
      ofil << endl;
   }
   for (int i=0; i<nat; i++) {
      ofil.width(5);
      ofil << int(atchrg[i]);
      ofil.width(12);
      ofil << atchrg[i];
      for (int j=0; j<3; j++) {
         ofil.width(12);
         ofil << x[3*i+j];
      }
      ofil << endl;
   }
   return;
}
//**********************************************************************************************
void writeCubeProp(ofstream &ofil,int dim,solreal* (&prop))
{
   int count;
   count=0;
   for (int k=0; k<dim; k++) {
      ofil.width(13);
      ofil.fill(' ');
      ofil << scientific << setprecision(5) << prop[k];
      count++;
      if (count==6) {
         ofil << endl;
         count=0;
         ofil.setf( std::ios::fixed, std::ios::floatfield );
      }
   }
   if (count!=0) {
      ofil << endl;
      count=0;
   }
   return;
}
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************
//**********************************************************************************************

#endif//_SOLCUBETOOLS_CPP_

